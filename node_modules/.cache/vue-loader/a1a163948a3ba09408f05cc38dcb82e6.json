{"remainingRequest":"/Users/Justas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Justas/Desktop/test/src/views/Garden.vue?vue&type=style&index=0&id=3389566f&lang=scss&scoped=true&","dependencies":[{"path":"/Users/Justas/Desktop/test/src/views/Garden.vue","mtime":1664037689365},{"path":"/Users/Justas/Desktop/test/node_modules/css-loader/dist/cjs.js","mtime":1664033234679},{"path":"/Users/Justas/Desktop/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1664033235335},{"path":"/Users/Justas/Desktop/test/node_modules/postcss-loader/src/index.js","mtime":1664033234812},{"path":"/Users/Justas/Desktop/test/node_modules/sass-loader/dist/cjs.js","mtime":1664033251240},{"path":"/Users/Justas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1664033234461},{"path":"/Users/Justas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1664033235275}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5nYXJkZW4gewogIHdpZHRoOiA1NTBweDsKICBoZWlnaHQ6IDU1MHB4OwogIGJhY2tncm91bmQ6IGNvcm5mbG93ZXJibHVlOwogIHotaW5kZXg6IDEwMDAwOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXJnaW46IDAgYXV0bzsKfQoudGVzdCB7CiAgd2lkdGg6IDUwcHg7CiAgaGVpZ2h0OiA1MHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKfQo="},{"version":3,"sources":["Garden.vue"],"names":[],"mappings":";AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Garden.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"garden\">\n    <div :style=\"{ top, left }\" class=\"test\">\n      <Snake ref=\"snake\" @upDown=\"upDown\" @leftRight=\"leftRight\" />\n    </div>\n    <button @click=\"stopInterval\">asdasd</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport Snake from \"../components/Snake.vue\";\n\ninterface ComponentData {\n  xPosition: number;\n  yPosition: number;\n  direction: any;\n  interval?: any;\n  intervalSpeed: number;\n  loading: boolean;\n}\n\nexport default Vue.extend({\n  components: {\n    Snake,\n  },\n\n  data(): ComponentData {\n    return {\n      xPosition: 0,\n      yPosition: 0,\n      direction: null,\n      interval: null,\n      intervalSpeed: 500,\n      loading: true,\n    };\n  },\n\n  methods: {\n    stopInterval(): void {\n      clearInterval(this.interval);\n    },\n\n    leftRight(event: string) {\n      console.log(123);\n\n      this.stopInterval();\n\n      const moveRight = () => {\n        if (this.xPosition <= 450) {\n          this.xPosition += 50;\n        } else {\n          clearInterval(this.interval);\n        }\n      };\n\n      const moveLeft = () => {\n        if (!(this.xPosition <= 0)) {\n          this.xPosition -= 50;\n        } else {\n          clearInterval(this.interval);\n        }\n      };\n\n      if (event === \"ArrowRight\") {\n        this.direction = moveRight;\n      }\n\n      if (event === \"ArrowLeft\") {\n        this.direction = moveLeft;\n      }\n\n      this.interval = setInterval(this.direction, this.intervalSpeed);\n    },\n\n    upDown(event: string) {\n      this.stopInterval();\n\n      const moveUp = () => {\n        if (!(this.yPosition <= 0)) {\n          this.yPosition -= 50;\n        } else {\n          clearInterval(this.interval);\n        }\n      };\n\n      const moveDown = () => {\n        if (this.yPosition <= 450) {\n          this.yPosition += 50;\n        } else {\n          clearInterval(this.interval);\n        }\n      };\n\n      if (event === \"ArrowUp\") {\n        this.direction = moveUp;\n      }\n\n      if (event === \"ArrowDown\") {\n        this.direction = moveDown;\n      }\n\n      this.interval = setInterval(this.direction, this.intervalSpeed);\n    },\n  },\n  computed: {\n    top(): string {\n      return this.yPosition + \"px\";\n    },\n    left(): string {\n      return this.xPosition + \"px\";\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.garden {\n  width: 550px;\n  height: 550px;\n  background: cornflowerblue;\n  z-index: 10000;\n  position: relative;\n  margin: 0 auto;\n}\n.test {\n  width: 50px;\n  height: 50px;\n  position: absolute;\n}\n</style>\n"]}]}